===========Stack Implementation With Array===============

package Practice;

public class StackImplementationUsingArray {
	
	int size;
	int[] arr;
	int top;
	
	StackImplementationUsingArray(int size){
		this.size = size;
		this.arr = new int[size];
		top = -1;
	}
	
    //Implementing IsEmpty function
	
	public boolean isEmpty() {
		return (top==-1);
	}
	
	//Implementing IsFull funtion
	
	public boolean isFull() {
		return (top==size-1);
	}
	
	public void push(int element) {
		if (isFull()) {
			System.out.println("Stack is Full");
		} else
		{
			top++;
			arr[top]=element;
		}
		
	}
	
	public int pop() {
		if (isEmpty()) {
			System.out.println("Stack is already empty");
			return -1;
		}else {
			int currentTop = top;
			top--;
			return arr[currentTop];
		}
		
	}
	
	public static void main(String[] args) {
		StackImplementationUsingArray stack = new StackImplementationUsingArray(6);
		System.out.println(stack.isEmpty());
		stack.push(10);
		System.out.println(stack.isEmpty());
		stack.push(20);
		System.out.println(stack.isEmpty());
		System.out.println(stack.pop());
	}
}
